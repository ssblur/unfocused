buildscript {
  ext.kotlin_version = rootProject.kotlin_version
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
  id "com.palantir.git-version" version "0.15.0"
  id 'architectury-plugin' version '3.4-SNAPSHOT'
  id 'com.gradleup.shadow' version '8.3.6' apply false
}
apply plugin: 'kotlin'

architectury {
  minecraft = project.minecraft_version
}

allprojects {
  group = rootProject.maven_group
  try {
    def matcher = gitVersion() =~ /^v(\d+\.\d+\.\d+(-\d+\.\d+\.\d+)?-?)?.*/
    matcher.find()
    version = matcher.group(1)
    if (version.endsWith("-")) version += "SNAPSHOT"
  } catch(Exception ignored) {
    version = "1"
  }
}

subprojects {
  apply plugin: 'dev.architectury.loom'
  apply plugin: 'architectury-plugin'
  apply plugin: 'maven-publish'

  base {
    // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
    archivesName = "$rootProject.archives_name-$project.name"
  }

  repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
  }

  loom {
    silentMojangMappingsLicense()
  }

  dependencies {
    minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
    mappings loom.officialMojangMappings()
  }

  java {
    withSourcesJar()
  }

  tasks.withType(JavaCompile).configureEach {
    it.options.release = rootProject.jvm_version as Integer
  }

  // Configure Maven publishing.
  publishing {
    publications {
      mavenJava(MavenPublication) {
        artifactId = base.archivesName.get()
        from components.java
      }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
      maven {
        name = "ssblur-maven"
        url = version.endsWith("SNAPSHOT") ? uri("https://mvn.blur.lol/snapshots") : uri("https://mvn.blur.lol/releases")

        credentials {
          username = System.getenv("SSBLURMVNUSERNAME")
          password = System.getenv("SSBLURMVNPASSWORD")
        }
      }

    }
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

kotlin {
  jvmToolchain(8)
}
